## +------------------------------------------------------------------------+
## | quix86                                                                 |
## +------------------------------------------------------------------------+
## | This file is part of quix86, an x86-64 instruction decoder.            |
## |                                                                        |
## | Copyright (C) 2011 Institute for System Programming of Russian Academy |
## | of Sciences.                                                           |
## |                                                                        |
## | Contact e-mail: <unicluster@ispras.ru>.                                |
## |                                                                        |
## | quix86 is free software: you can redistribute it and/or modify it      |
## | under the terms of the GNU Lesser General Public License as published  |
## | by the  Free Software Foundation, either version 3 of the License, or  |
## | (at your option) any later version.                                    |
## |                                                                        |
## | quix86 is distributed in the hope that it will be useful, but WITHOUT  |
## | ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or  |
## | FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public   |
## | License for more details.                                              |
## |                                                                        |
## | You should have received a copy of the GNU Lesser General Public       |
## | License along with quix86. If not, see <http://www.gnu.org/licenses/>. |
## +------------------------------------------------------------------------+

## Reference: AMD Architecture Programmer's Manual 3: Tables A-6, A-7.
## Reference: Intel Architecture Software Developerâ€™s Manual 2B: Table A-6.
Map M15 reg
{
    00: [ sp ]
        00: FXSAVE      Mfx+
        F3: RDFSBASE    Rd+             [ os = 0 ]          # Intel
        F3: RDFSBASE    Rd+             [ os = 1 ]          # Intel
        F3: RDFSBASE    Rq+             [ os = 2 ]          # Intel
    01: [ sp ]
        00: FXRSTOR     Mfx-
        F3: RDGSBASE    Rd+             [ os = 0 ]          # Intel
        F3: RDGSBASE    Rd+             [ os = 1 ]          # Intel
        F3: RDGSBASE    Rq+             [ os = 2 ]          # Intel
    02: [ sp ]
        00: LDMXCSR     Md-
        F3: WRFSBASE    Rd-             [ os = 0 ]          # Intel
        F3: WRFSBASE    Rd-             [ os = 1 ]          # Intel
        F3: WRFSBASE    Rq-             [ os = 2 ]          # Intel
    03: [ sp ]
        00: STMXCSR     Md+
        F3: WRGSBASE    Rd-             [ os = 0 ]          # Intel
        F3: WRFSBASE    Rd-             [ os = 1 ]          # Intel
        F3: WRFSBASE    Rq-             [ os = 2 ]          # Intel
    04: XSAVE       .                   [ mod = 00 ]        # Intel
    04: XSAVE       .                   [ mod = 01 ]        # Intel
    04: XSAVE       .                   [ mod = 02 ]        # Intel
    05: XRSTOR      .                   [ mod = 00 ]        # Intel
    05: XRSTOR      .                   [ mod = 01 ]        # Intel
    05: XRSTOR      .                   [ mod = 02 ]        # Intel
    05: LFENCE      .                   [ mod = 03 ]
    06: XSAVEOPT    .                   [ mod = 00 ]        # Intel
    06: XSAVEOPT    .                   [ mod = 01 ]        # Intel
    06: XSAVEOPT    .                   [ mod = 02 ]        # Intel
    06: MFENCE      .                   [ mod = 03 ]
    07: CLFLUSH     Mb-                 [ mod = 00 ] 
    07: CLFLUSH     Mb-                 [ mod = 01 ]
    07: CLFLUSH     Mb-                 [ mod = 02 ]
    07: SFENCE      .                   [ mod = 03 ]
}
