## +------------------------------------------------------------------------+
## | quix86                                                                 |
## +------------------------------------------------------------------------+
## | This file is part of quix86, an x86-64 instruction decoder.            |
## |                                                                        |
## | Copyright (C) 2011 Institute for System Programming of Russian Academy |
## | of Sciences.                                                           |
## |                                                                        |
## | Contact e-mail: <unicluster@ispras.ru>.                                |
## |                                                                        |
## | quix86 is free software: you can redistribute it and/or modify it      |
## | under the terms of the GNU Lesser General Public License as published  |
## | by the  Free Software Foundation, either version 3 of the License, or  |
## | (at your option) any later version.                                    |
## |                                                                        |
## | quix86 is distributed in the hope that it will be useful, but WITHOUT  |
## | ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or  |
## | FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public   |
## | License for more details.                                              |
## |                                                                        |
## | You should have received a copy of the GNU Lesser General Public       |
## | License along with quix86. If not, see <http://www.gnu.org/licenses/>. |
## +------------------------------------------------------------------------+

# TODO: this separate map is present only on AMD.

## Reference: AMD Architecture Programmer's Manual 3: Tables A-6, A-7.
## Reference: Intel Architecture Software Developerâ€™s Manual 2B: Table A-6.
Map MP reg
{
    # TODO: Intel has 0F 0D as NOP Ev, AMD - PREFETCH.
    # Using AMD variant.
    00: PREFETCH    Mb-
    01: PREFETCHW   Mb-
    02: PREFETCH    Mb-                         # Reserved PREFETCH aliased to PREFETCH.
    03: PREFETCHW   Mb-
    04: PREFETCH    Mb-                         # Reserved PREFETCH aliased to PREFETCH.
    05: PREFETCH    Mb-                         # Reserved PREFETCH aliased to PREFETCH.
    06: PREFETCH    Mb-                         # Reserved PREFETCH aliased to PREFETCH.
    07: PREFETCH    Mb-                         # Reserved PREFETCH aliased to PREFETCH.
}
